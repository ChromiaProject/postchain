image: maven:3.8.4-jdk-11

.setup:
  artifacts:
    when: always
    paths:
      - "**/*.log"
    expire_in: 1 week

# TODO: GITLAB_TOKEN needs to be created with a user that has write access to dev and master
# Username and email should be change to match the user we create.
# We are in detached HEAD state in build container, we need to attach it to remote branch
.git_template: &git_setup |
  git remote set-url --push origin "https://oauth2:${GITLAB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
  git config user.name "Gitlab"
  git config user.email gitlab@chromaway.com
  git symbolic-ref refs/heads/$CI_COMMIT_REF_NAME refs/remotes/origin/$CI_COMMIT_REF_NAME

deploy:
  extends: .setup
  stage: deploy
  only:
    - dev
  script:
    - mvn $MAVEN_CLI_OPTS --activate-profiles ci deploy

build:
  extends: .setup
  stage: build
  except:
    - dev
  script:
    - mvn $MAVEN_CLI_OPTS --activate-profiles ci verify

release:
  stage: release
  script:
    - *git_setup
    - mvn $MAVEN_CLI_OPTS --activate-profiles ci verify
    - mvn -B gitflow:release-start
    - mvn -B gitflow:release-finish -DskipTestProject=true -DversionDigitToIncrement=1
  only:
    - dev
  when: manual

patch:
  stage: release
  script:
    - *git_setup
    - mvn $MAVEN_CLI_OPTS --activate-profiles ci verify
    - mvn -B gitflow:hotfix-start -DfromBranch=$CI_COMMIT_BRANCH
    - HOTFIX_BRANCH=$(git branch --show-current)
    - mvn -B gitflow:hotfix-finish -DskipTestProject=true -DhotfixBranch=$HOTFIX_BRANCH -DversionDigitToIncrement=2
  only:
    - /^support\/.*$/
  when: manual

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -s .gitlab-settings.xml"
  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: postchain
  POSTGRES_USER: postchain
  POSTGRES_PASSWORD: postchain
  POSTCHAIN_DB_URL: jdbc:postgresql://postgres/postchain

services:
  - postgres

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository
