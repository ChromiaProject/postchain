image: registry.gitlab.com/chromaway/core-tools/chromia-images/maven-docker:1.0.0

.setup:
  tags:
    - saas-linux-large-amd64
  before_script:
    - docker run
      --detach
      --name postgres
      --env POSTGRES_INITDB_ARGS="--lc-collate=C.UTF-8 --lc-ctype=C.UTF-8 --encoding=UTF-8"
      --env POSTGRES_PASSWORD=postchain
      --env POSTGRES_USER=postchain
      --env PGDATA=/pgtmpfs
      --tmpfs=/pgtmpfs:size=1000m
      --publish 5432:5432
      postgres:14.7
  artifacts:
    when: always
    paths:
      - "**/*.log"
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        - "*/target/failsafe-reports/TEST-*.xml"
    expire_in: 1 week

.git_template: &git_setup |
  git remote set-url --push origin "https://oauth2:${BUILD_USER_GITLAB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
  git config user.name "build-user core-dev"
  git config user.email build_user@chromaway.com

stages:
  - build
  - nightly-tests
  - deploy-snapshot
  - deploy-release
  - deploy-patch
  - dependency-check
  - release

deploy-snapshot:
  extends: .setup
  stage: deploy-snapshot
  only:
    - dev
  script:
    - mvn $MAVEN_CLI_OPTS --activate-profiles ci,gitlab-registry,nightly -Djib.serialize=true -Dlatest.tag=latest-snapshot source:jar deploy

deploy-release:
  extends: .setup
  stage: deploy-release
  only:
    - master
  script:
    - mvn $MAVEN_CLI_OPTS --activate-profiles ci,gitlab-registry,nightly -Djib.serialize=true -Dlatest.tag=latest source:jar deploy

deploy-patch:
  extends: .setup
  stage: deploy-patch
  only:
    - /^support\/.*$/
  script:
    - mvn $MAVEN_CLI_OPTS --activate-profiles ci,gitlab-registry,nightly -Djib.serialize=true -Dlatest.tag=latest-patch source:jar deploy

build:
  extends: .setup
  stage: build
  interruptible: true
  except:
    - dev
    - master
    - tags
    - /^support\/.*$/
  script:
    - mvn $MAVEN_CLI_OPTS --activate-profiles ci verify

nightly-tests:
  extends: .setup
  stage: nightly-tests
  except:
    - dev
    - master
    - tags
    - /^support\/.*$/
  script:
    - mvn $MAVEN_CLI_OPTS --activate-profiles ci,nightly verify
  when: manual

dependency-check:
  extends: .setup
  stage: dependency-check
  interruptible: true
  script:
    - mvn $MAVEN_CLI_OPTS --activate-profiles dependency-check verify
  only:
    variables:
      - $RUN_DEPENDENCY_CHECK == "true"

container-scanning:
  extends: .setup
  stage: dependency-check
  interruptible: true
  script:
    - echo "Scanning image $IMAGE:$VERSION"
    - curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
    - grype registry:registry.gitlab.com/chromaway/postchain/$IMAGE:$VERSION --only-fixed -q
    - grype registry:registry.gitlab.com/chromaway/postchain/$IMAGE:$VERSION --fail-on high -q
  parallel:
    matrix:
      - IMAGE: [ postchain-cli,
                 postchain-admin-client ]
        VERSION: [ 3.10.0-SNAPSHOT ]
  only:
    variables:
      - $RUN_DEPENDENCY_CHECK == "true"

release:
  stage: release
  variables:
    # Make a full clone. This is required, since otherwise we get an error regarding unrelated merge histories.
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
  script:
    - *git_setup
    - git checkout $CI_COMMIT_REF_NAME
    - >
      if [ -z "${VERSION}" ] || [ -z "${NEXT_VERSION}" ]; then
        DIGIT="${VERSION_DIGIT_TO_INCREMENT:-2}"
        mvn -B gitflow:release -DskipTestProject=true -DversionDigitToIncrement=$DIGIT
      else
        mvn -B gitflow:release -DskipTestProject=true -DreleaseVersion=$VERSION -DdevelopmentVersion=$NEXT_VERSION
      fi
  only:
    - dev
  when: manual

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -s .gitlab-settings.xml"
  POSTCHAIN_DB_URL: jdbc:postgresql://docker/postchain
  DOCKER_HOST: tcp://docker:2375

services:
  - name: docker:23.0.4-dind
    alias: docker
    # explicitly disable tls to avoid docker startup interruption
    command: [ "--tls=false" , "--experimental" ]

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository
