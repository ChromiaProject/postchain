openapi: 3.0.3
info:
  title: Postchain REST API
  description: Postchain REST API
  version: 3.5.0
paths:
  /tx/{blockchainRid}:
    post:
      summary: Submit transaction
      description: Submit a transaction to a chain
      parameters:
        - $ref: "#/components/parameters/blockchainRid"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tx"
      responses:
        200:
          description: Transaction queued
          content:
            application/json:
              schema:
                type: object
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                couldNotParseJson:
                  value:
                    error: "Could not parse json"
                incorrectTransaction:
                  value:
                    error: "Transaction <hex-string> is not correct"
                invalidTxFormat:
                  value:
                    error: "Invalid tx format. Expected {\"tx\": <hex-string>}"
                invalidTx:
                  value:
                    error: "Transaction is invalid"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                chainNotFound:
                  value:
                    error: "Can't find blockchain with blockchainRID: <hex-string>"
        409:
          description: Transaction already in queue
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                transactionAlreadyInQueue:
                  value:
                    error: "Transaction already in queue"
        503:
          description: Transaction queue is full
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                queueFull:
                  value:
                    error: "Transaction queue is full"
  /tx/{blockchainRid}/{txRid}:
    get:
      summary: Fetch transaction
      description: Fetch a transaction from a chain
      parameters:
        - $ref: "#/components/parameters/blockchainRid"
        - $ref: "#/components/parameters/txRid"
      responses:
        200:
          description: Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                chainNotFound:
                  value:
                    error: "Can't find blockchain with blockchainRID: <hex-string>"
                txNotFound:
                  value:
                    error: "Can't find tx with hash <hex-string>"
  /transactions/{blockchainRid}/{txRid}:
    get:
      summary: Fetch transaction info
      description: Fetch info about a transaction from a chain
      parameters:
        - $ref: "#/components/parameters/blockchainRid"
        - $ref: "#/components/parameters/txRid"
      responses:
        200:
          description: Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/txInfo"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                chainNotFound:
                  value:
                    error: "Can't find blockchain with blockchainRID: <hex-string>"
                txNotFound:
                  value:
                    error: "Can't find tx with hash <hex-string>"
  /transactions/{blockchainRid}:
    get:
      summary: Fetch transactions info
      description: Fetch info about transactions from a chain
      parameters:
        - $ref: "#/components/parameters/blockchainRid"
        - name: limit
          description: Limit number of transactions returned
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 600
            default: 25
        - name: before-time
          description: Return only transactions before this time
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/txInfo"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                chainNotFound:
                  value:
                    error: "Can't find blockchain with blockchainRID: <hex-string>"
  /tx/{blockchainRid}/{txRid}/status:
    get:
      summary: Fetch transaction status
      description: Fetch the status of a transaction from a chain
      parameters:
        - $ref: "#/components/parameters/blockchainRid"
        - $ref: "#/components/parameters/txRid"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/txStatus"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                chainNotFound:
                  value:
                    error: "Can't find blockchain with blockchainRID: <hex-string>"
  /blocks/{blockchainRid}:
    get:
      summary: Fetch blocks info
      description: Fetch info about blocks from a chain
      parameters:
        - $ref: "#/components/parameters/blockchainRid"
        - name: limit
          description: Limit number of blocks returned
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 25
        - name: before-time
          description: Return only blocks before this time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: txs
          description: Return full transaction data
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/blockInfo"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                chainNotFound:
                  value:
                    error: "Can't find blockchain with blockchainRID: <hex-string>"
  /blocks/{blockchainRid}/{blockRid}:
    get:
      summary: Fetch block info
      description: Fetch info about a block from a chain
      parameters:
        - $ref: "#/components/parameters/blockchainRid"
        - $ref: "#/components/parameters/blockRid"
        - name: txs
          description: Return full transaction data
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/blockInfo"
                  - $ref: "#/components/schemas/nullValue"
        404:
          description: Chain not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
              examples:
                chainNotFound:
                  value:
                    error: "Can't find blockchain with blockchainRID: <hex-string>"

components:
  parameters:
    blockchainRid:
      name: blockchainRid
      description: Hex encoded blockchain RID
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/hash"
      example: "0398A1E7B0F87709AFD14CD1821EAAAFB41931A8097FFA2D83E5FE10DA7E4DD5"
    txRid:
      name: txRid
      description: Hex encoded transaction RID
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/hash"
      example: "76306EE32E46DE5A4CD369CB6697EF53FB804D0E40E3BB97076D094EE2FA4BD3"
    blockRid:
      name: blockRid
      description: Hex encoded block RID
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/hash"
      example: "A41E83512DF6CF8BC559EC5792BF221817E5D7E48E978E907210D770C75AA32E"
  schemas:
    tx:
      type: object
      required:
        - tx
      properties:
        tx:
          type: string
          pattern: "[0-9a-fA-F]{2,}"
          description: Hex encoded GTV transaction
    txInfo:
      type: object
      required:
        - blockRID
        - blockHeight
        - blockHeader
        - witness
        - timestamp
        - txRID
        - txRid
      properties:
        blockRID:
          $ref: "#/components/schemas/byteArray"
        blockHeight:
          type: integer
          format: int64
        blockHeader:
          $ref: "#/components/schemas/byteArray"
        witness:
          $ref: "#/components/schemas/byteArray"
        timestamp:
          type: integer
          format: int64
        txRID:
          $ref: "#/components/schemas/byteArray"
        txRid:
          $ref: "#/components/schemas/byteArray"
        txData:
          $ref: "#/components/schemas/byteArray"
    txStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - "unknown"
            - "waiting"
            - "confirmed"
            - "rejected"
        rejectReason:
          type: string
    blockInfo:
      type: object
      required:
        - rid
        - prevBlockRID
        - header
        - height
        - transactions
        - witness
        - timestamp
      properties:
        rid:
          $ref: "#/components/schemas/byteArray"
        prevBlockRID:
          $ref: "#/components/schemas/byteArray"
        header:
          $ref: "#/components/schemas/byteArray"
        height:
          type: integer
          format: int64
        transactions:
          type: array
          items:
            type: object
            required:
              - rid
              - hash
            properties:
              rid:
                $ref: "#/components/schemas/byteArray"
              hash:
                $ref: "#/components/schemas/byteArray"
              data:
                $ref: "#/components/schemas/byteArray"
        witness:
          $ref: "#/components/schemas/byteArray"
        timestamp:
          type: integer
          format: int64
    error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
    hash:
      type: string
      pattern: "[0-9a-fA-F]{64}"
    hexString:
      type: string
      pattern: "[0-9a-fA-F]"
    byteArray:
      type: array
      items:
        type: integer
    nullValue:
      type: "null"
