<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2020 ChromaWay AB. See README for license information. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>postchain</artifactId>
        <groupId>net.postchain</groupId>
        <version>3.4.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>postchain-containerized</artifactId>
    <name>Postchain Containerized</name>
    <packaging>docker</packaging>

    <dependencies>
        <dependency>
            <groupId>net.postchain</groupId>
            <artifactId>postchain-base</artifactId>
        </dependency>
        <dependency>
            <groupId>net.postchain</groupId>
            <artifactId>postchain-devtools</artifactId>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.apache.commons</groupId>-->
<!--            <artifactId>commons-text</artifactId>-->
<!--            <version>1.8</version>-->
<!--        </dependency>-->
    </dependencies>

    <build>
        <plugins>
            <!-- Docker image in integration tests -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <images>
                        <image>
                            <name>chromaway/postchain-slavenode:3.3.3</name>
                            <build>
                                <assemblies>
                                    <assembly>
                                        <descriptorRef>artifact-with-dependencies</descriptorRef>
                                    </assembly>
                                </assemblies>
                                <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
                                <filter>@</filter>
                            </build>
                        </image>
                    </images>
                </configuration>
                <!-- Connect start/stop to pre- and
       post-integration-test phase, respectively if you want to start
       your docker containers during integration tests -->
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <!-- "build" should be used to create the images with the artifact -->
                            <goal>build</goal>
                            <!-- <goal>start</goal> -->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>ci</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>