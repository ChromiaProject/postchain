entity icmf_messages_height {
    key topic: text,
        sender: byte_array,
        sender_height: integer;
    anchor_height: integer;
    index topic, anchor_height;
}

struct signed_block_header {
    block_header: byte_array;
    witness: byte_array;
}

function process_icmf(header: block_header) {
    val icmf_data = map<text,gtv>.from_gtv_pretty(header.extra["icmf_send"]);
    for (topic in icmf_data.keys()) {
        create icmf_messages_height(
            topic = topic,
            sender = header.blockchain_rid,
            sender_height = header.height,
            anchor_height = op_context.block_height
        );
    }
}

query icmf_get_headers_with_messages_since_height(topic: text, anchor_height: integer): list<signed_block_header> {
    return (m: icmf_messages_height, a: anchor_block) @*
        { a.blockchain_rid == m.sender, a.block_height == m.sender_height, topic, .anchor_height >= anchor_height }
        (signed_block_header(block_header = a.block_header, witness = a.witness), @omit @sort m.rowid);
}
