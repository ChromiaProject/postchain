<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>postchain</artifactId>
        <groupId>net.postchain</groupId>
        <version>${revision}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>postchain-cli</artifactId>
    <name>Postchain CLI</name>
    <description>CLI for running a postchain node with postchain-base implementation</description>

    <properties>
        <main.class>net.postchain.AppKt</main.class>
        <image.name>postchain-cli</image.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>net.postchain</groupId>
            <artifactId>postchain-base</artifactId>
        </dependency>

        <!-- Cli -->
        <dependency>
            <groupId>com.github.ajalt.clikt</groupId>
            <artifactId>clikt-jvm</artifactId>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.postchain</groupId>
            <artifactId>postchain-devtools</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.willowtreeapps.assertk</groupId>
            <artifactId>assertk-jvm</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M7</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>**/*IT</include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix/>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <!-- To be able get current version: javaClass.getPackage().implementationVersion  -->
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <allowInsecureRegistries>false</allowInsecureRegistries>
                    <from>
                        <image>registry.gitlab.com/chromaway/core-tools/chromia-images/java17:1.0.0@sha256:94bc0a1964e08ee42ff1dcd6178802e0156a2e24a3afa4e675670d5e2f8372a5</image>
                    </from>
                    <container>
                        <appRoot>/opt/chromaway/postchain</appRoot>
                        <workingDirectory>/opt/chromaway/postchain</workingDirectory>
                        <mainClass>${main.class}</mainClass>
                    </container>
                    <containerizingMode>packaged</containerizingMode>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
