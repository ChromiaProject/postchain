<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>postchain</artifactId>
        <groupId>net.postchain</groupId>
        <version>3.10.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>postchain-cli</artifactId>
    <name>Postchain CLI</name>
    <description>CLI for running a postchain node with postchain-base implementation</description>

    <properties>
        <main.class>net.postchain.AppKt</main.class>
        <image.name>chromaway/postchain-cli</image.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>net.postchain</groupId>
            <artifactId>postchain-base</artifactId>
        </dependency>

        <!-- Cli -->
        <dependency>
            <groupId>com.github.ajalt.clikt</groupId>
            <artifactId>clikt-jvm</artifactId>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- For Log4j2/YAML configuration -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.postchain</groupId>
            <artifactId>postchain-devtools</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.willowtreeapps.assertk</groupId>
            <artifactId>assertk</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M7</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>**/*IT</include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix/>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <!-- To be able get current version: javaClass.getPackage().implementationVersion  -->
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>target/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>gitlab-registry</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <!-- We are using custom maven executions instead of i.e. fabric8 docker-maven-plugin since v0.38.1 does NOT support building to multiple architectures. When they do, feel free to replace this plugin again -->
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>exec-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>docker-login</id>
                                    <phase>prepare-package</phase>
                                    <goals>
                                        <goal>exec</goal>
                                    </goals>
                                    <configuration>
                                        <executable>docker</executable>
                                        <arguments>
                                            <argument>login</argument>
                                            <argument>registry.gitlab.com</argument>
                                            <argument>-u</argument>
                                            <argument>${env.CI_REGISTRY_USER}</argument>
                                            <argument>-p</argument>
                                            <argument>${env.CI_REGISTRY_PASSWORD}</argument>
                                        </arguments>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>build-image</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>exec</goal>
                                    </goals>
                                    <configuration>
                                        <executable>docker</executable>
                                        <arguments>
                                            <argument>buildx</argument>
                                            <argument>build</argument>
                                            <argument>--platform</argument>
                                            <argument>${image.platforms}</argument>
                                            <argument>--tag</argument>
                                            <argument>${gitlab.registry}/${image.name}:${project.version}
                                            </argument>
                                            <argument>${project.basedir}/.</argument>
                                            <argument>--push</argument>
                                        </arguments>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
